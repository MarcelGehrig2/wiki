// ITEM 17		Understand special member function generation
// ////////////////////////////////////////////////////////////////////////////

// summary -------------------------------------------------------------------
// * in official C++ parlance, the special member functions are the ones that C++ is willing to generate on its own, if they are not manually implemented
// * the special member function are only generated if they are needed (i.e. if there is no class constructor defined)
// * only moveable members will be moved. All others (e.g. most C++98 legacy classes) will be “moved” via their copy operations
// * if you declare explicitly a copy operation, move operations won't be generated by the compiler
// * if you declare explicitly a move operation, copy operations won't be generated by the compiler


// examples -------------------------------------------------------------------
// * default constructor:
Widget( args );
// * destructor:
~Widget( args );
// * copy constructor
// * copy assignment operator (independent of copy constructor -> declare only one, the compiler generates the other)
// * move constructor (memberwise move "requests"):
Widget(Widget&& rhs);
// * move assignment operator (NOT independent of move constructor -> declare only one, the compiler does NOT generate the other):
Widget& operator=(Widget&& rhs);








