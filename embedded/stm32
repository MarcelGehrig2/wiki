STM32MP1
########
STM32MP157		microprocessor, dual A7, one M4, 3D graphics
STM32MP157C-DK2		discovery kit with LCD, Wifi, Bluetooth

* System Workbench for STM32 IDE (SW4STM32):	IDE for M4
 - /home/ubuntu/SystemWorkbench
* STM32-CoPro-MPU:			plugin of System Workbench for MPU cortex-m
* STM32CubeProgrammer:			flashes image over usb to sdCard
 - /home/ubuntu/STM32MPU-Tools/STM32CubeProgrammer
* openStLinux:				st linux distro for stm32
 - /opt/st/stm32mp1/2.6-openstlinux-4.19-thud-mp1-19-02-20/
 - /home/ubuntu/STM32MPU/developerPkgSandbox/STM32MP15-Ecosystem-v1.0.0/Developer-Package/SDK

#Sofware
STM32MPU Embedded Software   =   OpenSTLinux Distribution + STM32CubeMP1 Package
Distro Linux:	OpenST Linux Distribution
	https://wiki.st.com/stm32mpu/wiki/OpenSTLinux_distribution
STM32CubeMP1:	BSP, HAL, midleware and apps in source
	https://www.st.com/content/st_com/en/products/embedded-software/mcu-mpu-embedded-software/stm32-embedded-software/stm32cube-mcu-mpu-packages/stm32cubemp1.html
OpenSTLinux Distribution
	https://wiki.st.com/stm32mpu/wiki/Which_STM32MPU_Embedded_Software_Package_better_suits_your_needs
	- starter package
	- developer package:	add own software on ST software
	- distribution package:	create own linux distro, modify or add pieces of software, and to create the right Linux distribution, for the targeted product
OP-TEE:		Open Portable Trusted Execution Environment 
TF-A:		Trusted Firmware-A, first-stage boot loader for trusted stuff
OpenAMP:	Open Asymmetric Multi Processing framework
OpenEmbedded:	build framework for embedded Linux (Distribution builder)
 - bitbake:	make-like build tool
 - layer:	collection of recipes
OpenEmbedded Core:	contains base layer of recipes, classes and associated files for many OpenEmbedded derived systems
* Distribution Package contains:
 - build framework based on OpenEmbedded
 - OpenSTLinux distro including source code -> Cortex A
 - STM32Cube MPU Package -> Cortex M  (integrated in OpenSTLinux)

#Populate target with preprepared images
https://wiki.st.com/stm32mpu/wiki/Getting_started/STM32MP1_boards/STM32MP157C-DK2/Let%27s_start/Populate_the_target_and_boot_the_image
* install 'STM32_Programmer_CLI'	'STM32CubeProgrammer'	"~/STM32-Tools/"
* add installpath to PATH
* check usb device port:	STM32_Programmer_CLI -l usb
* program board:
 - both boot switches to off
 - reset board
 - STM32_Programmer_CLI -c port=usb1 -w flashlayout_st-image-weston/FlashLayout_sdcard_stm32mp157c-dk2-trusted.tsv
 - both boot switches to on
 - reset

#Hello world in c
https://wiki.st.com/stm32mpu/wiki/Getting_started/STM32MP1_boards/STM32MP157C-DK2/Develop_on_Arm%C2%AE_Cortex%C2%AE-A7/Create_a_simple_hello-world_application
"/home/ubuntu/STM32MPU/developerPkgSandbox/STM32MP15-Ecosystem-v1.0.0/Developer-Package/SDK"
* install SDK
* source preparation script
   "source SDK/environment-setup-cortexa7t2hf-neon-vfpv4-openstlinux_weston-linux-gnueabi"
* create source file and Makefile
* "#make"
* "scp gtk_hello_world root@<board ip address>:/usr/local"

#custom kernel
https://wiki.st.com/stm32mpu/wiki/Getting_started/STM32MP1_boards/STM32MP157C-DK2/Develop_on_Arm%C2%AE_Cortex%C2%AE-A7/Modify,_rebuild_and_reload_the_Linux%C2%AE_kernel
* download sources of kernel
 - kernel for ST: https://www.st.com/content/ccc/resource/technical/sw-updater/firmware2/group0/d1/01/38/fc/a8/61/4f/e9/STM32cube_Standard_A7_BSP_components_kernel/files/SOURCES-kernel-stm32mp1-openstlinux-4.19-thud-mp1-19-02-20.tar.xz/jcr:content/translations/en.SOURCES-kernel-stm32mp1-openstlinux-4.19-thud-mp1-19-02-20.tar.xz 
* extract kernel sources
* apply ST patches
* apply ST config fragments
* make oldconfig
* "make uImage vmlinux dtbs LOADADDR=0xC2000040"
* "make modules"
* Generate output build artifacts
* push kernel, dtb, and modules to board
* BOARD$ /sbin/depmod -a
* BOARD$ sync

#install cortex-M4 firmware
https://wiki.st.com/stm32mpu/wiki/Getting_started/STM32MP1_boards/STM32MP157C-DK2/Develop_on_Arm%C2%AE_Cortex%C2%AE-M4/Install_the_IDE
* install System Workbench for STM32 IDE
* start IDE:	"~/SystemWorkbench/eclipse"
* examples:	"~/STM32MPU/developerPkgSandbox/STM32MP15-Ecosystem-v1.0.0/Developer-Package/STM32Cube_FW_MP1_V1.0.0/Projects/STM32MP157C-DK2"


#tools on board
* stop firmware:	echo stop > /sys/class/remoteproc/remoteproc0/state
* output log firmware:	cat /sys/kernel/debug/remoteproc/remoteproc0/trace0






